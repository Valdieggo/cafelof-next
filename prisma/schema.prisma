generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Country {
  country_id   Int       @id @default(autoincrement())
  country_name String    @unique
  created_at   DateTime  @default(now())
  updated_at   DateTime? @updatedAt
  regions      Region[]
}

model Region {
  region_id   Int       @id @default(autoincrement())
  region_name String
  country_id  Int
  created_at  DateTime  @default(now())
  updated_at  DateTime? @updatedAt
  cities      City[]
  country     Country   @relation(fields: [country_id], references: [country_id])

  @@index([country_id], map: "Region_country_id_fkey")
}

model City {
  city_id    Int           @id @default(autoincrement())
  city_name  String
  region_id  Int
  created_at DateTime      @default(now())
  updated_at DateTime?     @updatedAt
  region     Region        @relation(fields: [region_id], references: [region_id])
  addresses  UserAddress[]

  @@index([region_id], map: "City_region_id_fkey")
}

model UserAddress {
  user_address_id     Int       @id @default(autoincrement())
  user_address_street String
  city_id             Int
  created_at          DateTime  @default(now())
  updated_at          DateTime? @updatedAt
  users               User[]
  city                City      @relation(fields: [city_id], references: [city_id])

  @@index([city_id], map: "UserAddress_city_id_fkey")
}

model User {
  user_id           Int         @id @default(autoincrement())
  user_firstname    String
  user_lastname     String
  user_address      String?
  user_email        String      @unique
  user_phone_number String?
  user_address_id   Int
  created_at        DateTime    @default(now())
  updated_at        DateTime?   @updatedAt
  carts             Cart[]
  orders            Order[]
  address           UserAddress @relation(fields: [user_address_id], references: [user_address_id])

  @@index([user_address_id], map: "User_user_address_id_fkey")
}

model ProductCategorie {
  product_categorie_id          Int       @id @default(autoincrement())
  product_categorie_name        String    @unique
  product_categorie_description String?
  created_at                    DateTime  @default(now())
  updated_at                    DateTime? @updatedAt
  products                      Product[]
}

model Product {
  product_id           Int              @id @default(autoincrement())
  product_name         String
  product_price        Float
  product_image_url    String?
  product_categorie_id Int
  created_at           DateTime         @default(now())
  updated_at           DateTime?        @updatedAt
  carts                Cart[]
  inventories          Inventory[]
  category             ProductCategorie @relation(fields: [product_categorie_id], references: [product_categorie_id])

  @@index([product_categorie_id], map: "Product_product_categorie_id_fkey")
}

model Cart {
  cart_id       Int           @id @default(autoincrement())
  cart_quantity Int
  user_id       Int
  product_id    Int
  created_at    DateTime      @default(now())
  updated_at    DateTime?     @updatedAt
  product       Product       @relation(fields: [product_id], references: [product_id])
  user          User          @relation(fields: [user_id], references: [user_id])
  orderDetails  OrderDetail[]

  @@index([product_id], map: "Cart_product_id_fkey")
  @@index([user_id], map: "Cart_user_id_fkey")
}

model Inventory {
  inventory_id       Int       @id @default(autoincrement())
  inventory_quantity Int
  product_id         Int
  created_at         DateTime  @default(now())
  updated_at         DateTime? @updatedAt
  product            Product   @relation(fields: [product_id], references: [product_id])

  @@index([product_id], map: "Inventory_product_id_fkey")
}

model Discount {
  discount_id          Int       @id @default(autoincrement())
  discount_amount      Int
  discount_description String
  created_at           DateTime  @default(now())
  updated_at           DateTime? @updatedAt
  orders               Order[]
}

model Payment {
  payment_id     Int       @id @default(autoincrement())
  payment_method String
  payment_status String
  payment_amount Float
  created_at     DateTime  @default(now())
  updated_at     DateTime? @updatedAt
  orders         Order[]
}

model Order {
  order_id          Int           @id @default(autoincrement())
  order_date        DateTime
  order_total_price Float
  user_id           Int
  payment_id        Int
  discount_id       Int?
  created_at        DateTime      @default(now())
  updated_at        DateTime?     @updatedAt
  discount          Discount?     @relation(fields: [discount_id], references: [discount_id])
  payment           Payment       @relation(fields: [payment_id], references: [payment_id])
  user              User          @relation(fields: [user_id], references: [user_id])
  orderDetails      OrderDetail[]
  shipments         Shipment[]

  @@index([discount_id], map: "Order_discount_id_fkey")
  @@index([payment_id], map: "Order_payment_id_fkey")
  @@index([user_id], map: "Order_user_id_fkey")
}

model Shipment {
  shipment_id     Int       @id @default(autoincrement())
  shipment_status String
  order_id        Int
  created_at      DateTime  @default(now())
  updated_at      DateTime? @updatedAt
  order           Order     @relation(fields: [order_id], references: [order_id])

  @@index([order_id], map: "Shipment_order_id_fkey")
}

model OrderDetail {
  order_detail_id   Int       @id @default(autoincrement())
  order_detail_name String
  created_at        DateTime  @default(now())
  updated_at        DateTime? @updatedAt
  order_id          Int
  cart_id           Int
  cart              Cart      @relation(fields: [cart_id], references: [cart_id])
  order             Order     @relation(fields: [order_id], references: [order_id])

  @@index([cart_id], map: "OrderDetail_cart_id_fkey")
  @@index([order_id], map: "OrderDetail_order_id_fkey")
}
